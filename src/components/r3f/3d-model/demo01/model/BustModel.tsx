/*
model from : https://polyhaven.com/a/marble_bust_01
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/model/bust/marble_bust_01_1k.gltf -t -r public 
*/

import { useGLTF } from "@react-three/drei";
import { useMemo, useRef } from "react";
import { DoubleSide, Mesh, MeshStandardMaterial, ShaderMaterial } from "three";
import { GLTF } from "three-stdlib";
import { vert } from "./shader/vert";
import { frag } from "./shader/frag";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    marble_bust_01: Mesh;
  };
  materials: {
    marble_bust_01: MeshStandardMaterial;
  };
  // animations: GLTFAction[]
};
export function BustModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/model/bust/marble_bust_01_1k.gltf") as GLTFResult;
  const matRef = useRef<ShaderMaterial>(null!);

  const shader = useMemo(
    () => ({
      uniforms: { uTime: { value: 0 } },
      vert: vert,
      frag: frag,
    }),
    []
  );

  useFrame(({ clock, camera }) => {
    matRef.current.uniforms.uTime.value = clock.getElapsedTime();
    console.log(camera.position);
  });

  return (
    <>
      <group {...props} dispose={null}>
        <mesh
          scale={10}
          castShadow
          geometry={nodes.marble_bust_01.geometry}
          position={[0, 0.55, 0]}
        >
          <shaderMaterial
            ref={matRef}
            attach="material"
            uniforms={shader.uniforms}
            fragmentShader={shader.frag}
            vertexShader={shader.vert}
          />
        </mesh>
        <mesh>
          <cylinderGeometry />
          <shaderMaterial
            ref={matRef}
            attach="material"
            uniforms={shader.uniforms}
            fragmentShader={shader.frag}
            vertexShader={shader.vert}
          />
        </mesh>
      </group>
      {/* BACKGROUND */}
      <mesh scale={15} rotation={[0, Math.PI, 0]}>
        <sphereGeometry />
        <shaderMaterial
          ref={matRef}
          attach="material"
          uniforms={shader.uniforms}
          fragmentShader={shader.frag}
          vertexShader={shader.vert}
          side={DoubleSide}
        />
      </mesh>
    </>
  );
}

useGLTF.preload("/model/bust/marble_bust_01_1k.gltf");
